---
layout: post
title:  "单页应用的定义"
date:   2014-11-26 17:20:46
author: 大蔚陈
categories: 
- blog
- Others
img: spa.jpg
thumb: small-ux.png
---

# 单页应用到底是什么？

## 定义

单页应用(Single Page Application，简称为 SPA)，同样也以「单页界面」Single-Page Interface 著称。它是指浏览器中运行的应用，它们在使用期间不会重新加载页面，将所有的活动局限于一个 Web 页面中，仅在该 Web 页面初始化时加载相应的 HTML、JavaScript 和 CSS。<!--more-->一旦页面加载完成了，「单页应用」不会因为用户的操作而进行页面的重新加载或者跳转，取而代之的是利用 JavaScript 动态的变换 HTML 的内容，从而实现 UI 与用户的交互，避免了页面的重新加载，提供更流畅的用户体验。

其实最简单的说，就是在一个页面中显示所有的内容。那如何在一个页面中显示所有的内容呢？先看看 Web App 的组成。

## Web App 的组成

总的来说，我们看到的前端页面都有三部分组成：

- HTML
- CSS
- JavaScript

HTML 相当于整个页面的结构，顶部有个导航栏，中间为内容区域，底部为标签栏等等这类结构，由 HTML 决定。CSS 是样式，导航栏要不要有个投影效果，字体大小颜色等，JavaScript 处理交互，比如说点击删除按钮，弹出了一个对话框，这是 JavaScript 做的事情。

传统的网站都会有多个 HTML 文件，拥有一系列跳转页面，而「单页应用」的整个 Web App 就是一个 HTML 文件。「单页应用」话不需要重新刷新页面，获取数据页只是通过 Ajax 异步获取。（AJAX 不是新的编程语言，而是一种在无需重新加载整个网页的情况下，能够更新部分网页的技术。像 Gmail，新浪微博都大量采用这种技术）所以，「单页应用」非常适合用来做 Hybrid 应用（混合型应用，用 HTML5技术和原生开发组合起来生成的应用）。

## 「单页应用」的优缺点

单页应用优点多多，缺点也有，但是总体来说是利极大于弊。

### 优点

1. 更具吸引力的交互体验

  用户不需要重新刷新页面，页面显示流畅。单页应用可以和桌面应用一样渲染—单页应用只需要重绘界面上需要变化的部分。相比之下的传统网站，许多用户操作都会重绘整张页面，结果是当浏览器从服务器获取数据时，页面会假死并有“闪烁”现象，然后再重绘页面上的所有东西。如果页面很大，服务器又繁忙，或者网络连接很慢，这种“闪烁”现象会持续好几秒钟甚至是更长时间，用户只得猜测页面什么时候才可以再次使用。与单页应用的快速渲染和即时反馈相比，这是一种很恐怖的体验。
  
2. 前后端工作分离模式。

  单页 Web 应用可以和 RESTful 架构一起使用，通过 REST API 提供接口数据，并使用 Ajax 异步获取，这样有助于分离客户端和服务器端工作。更进一步，可以在客户端也可以分解为静态页面和页面交互两个部分。

3. 减轻服务器压力。

4. 共用一套后端程序代码。

### 缺点

1. 不利于 SEO。SEO(Search Engine Optimization)的意思是搜索引擎最佳化。如之前所说的，由于「单页应用」所有的内容都在一个页面中动态替换显示，在 SEO 上不具有太大优势。

2. 前进、后退管理。由于「单页应用」在一个页面中显示所有的内容，所以不能使用浏览器的前进后退功能。比如说如果在微信里打开了一个「单页应用」，进入到页面的其他内容层级时，左上角的返回功能可能就无法把你打入上一步了，而是直接把你带出这个应用。

3. 初次加载耗时长。不过如果是用「单页应用」做 Hybrid App 的话，这个倒也不是问题。

4. 对人的要求会更高一些。程序员的 JavaScript 底子要扎实，同时对组件化，设计模式要有所认识。

## 补充几句

我们前端研发的同事现在用的一个框架是 Ionic，这个框架是基于 AngularJs 的。AngularJs 是一个前端的 MV*框架，最合适开发客户端的单页应用。

> 参考书籍：[单页 Web 应用](http://www.amazon.cn/%E5%9B%BE%E4%B9%A6/dp/product-description/B00NN8GJGA/ref=dp_proddesc_0?ie=UTF8&s=books)
> 参考链接：[维基百科对单页应用的解释](http://en.wikipedia.org/wiki/Single-page_application)
